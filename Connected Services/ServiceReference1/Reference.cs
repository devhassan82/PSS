//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSS.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/PSSWCFService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Data.DataSet GetData(string BusinessID, string FilterText1, string FilterText2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataAsync(string BusinessID, string FilterText1, string FilterText2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadEmployeePerformanceIU", ReplyAction="http://tempuri.org/IService1/UploadEmployeePerformanceIUResponse")]
        PSS.ServiceReference1.UploadEmployeePerformanceIUResponse UploadEmployeePerformanceIU(PSS.ServiceReference1.UploadEmployeePerformanceIURequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UploadEmployeePerformanceIU", ReplyAction="http://tempuri.org/IService1/UploadEmployeePerformanceIUResponse")]
        System.Threading.Tasks.Task<PSS.ServiceReference1.UploadEmployeePerformanceIUResponse> UploadEmployeePerformanceIUAsync(PSS.ServiceReference1.UploadEmployeePerformanceIURequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        PSS.ServiceReference1.CompositeType GetDataUsingDataContract(PSS.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<PSS.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(PSS.ServiceReference1.CompositeType composite);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadEmployeePerformanceIU", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadEmployeePerformanceIURequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string xmlString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Success;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ErrorMsg;
        
        public UploadEmployeePerformanceIURequest() {
        }
        
        public UploadEmployeePerformanceIURequest(string xmlString, string Success, string ErrorMsg) {
            this.xmlString = xmlString;
            this.Success = Success;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadEmployeePerformanceIUResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadEmployeePerformanceIUResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadEmployeePerformanceIUResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Success;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string ErrorMsg;
        
        public UploadEmployeePerformanceIUResponse() {
        }
        
        public UploadEmployeePerformanceIUResponse(string UploadEmployeePerformanceIUResult, string Success, string ErrorMsg) {
            this.UploadEmployeePerformanceIUResult = UploadEmployeePerformanceIUResult;
            this.Success = Success;
            this.ErrorMsg = ErrorMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PSS.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PSS.ServiceReference1.IService1>, PSS.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetData(string BusinessID, string FilterText1, string FilterText2) {
            return base.Channel.GetData(BusinessID, FilterText1, FilterText2);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataAsync(string BusinessID, string FilterText1, string FilterText2) {
            return base.Channel.GetDataAsync(BusinessID, FilterText1, FilterText2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PSS.ServiceReference1.UploadEmployeePerformanceIUResponse PSS.ServiceReference1.IService1.UploadEmployeePerformanceIU(PSS.ServiceReference1.UploadEmployeePerformanceIURequest request) {
            return base.Channel.UploadEmployeePerformanceIU(request);
        }
        
        public string UploadEmployeePerformanceIU(string xmlString, ref string Success, ref string ErrorMsg) {
            PSS.ServiceReference1.UploadEmployeePerformanceIURequest inValue = new PSS.ServiceReference1.UploadEmployeePerformanceIURequest();
            inValue.xmlString = xmlString;
            inValue.Success = Success;
            inValue.ErrorMsg = ErrorMsg;
            PSS.ServiceReference1.UploadEmployeePerformanceIUResponse retVal = ((PSS.ServiceReference1.IService1)(this)).UploadEmployeePerformanceIU(inValue);
            Success = retVal.Success;
            ErrorMsg = retVal.ErrorMsg;
            return retVal.UploadEmployeePerformanceIUResult;
        }
        
        public System.Threading.Tasks.Task<PSS.ServiceReference1.UploadEmployeePerformanceIUResponse> UploadEmployeePerformanceIUAsync(PSS.ServiceReference1.UploadEmployeePerformanceIURequest request) {
            return base.Channel.UploadEmployeePerformanceIUAsync(request);
        }
        
        public PSS.ServiceReference1.CompositeType GetDataUsingDataContract(PSS.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<PSS.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(PSS.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
